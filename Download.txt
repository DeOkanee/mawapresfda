// Fungsi untuk menampilkan form download
let timerInterval;
let timeLeft = 60; // waktu dalam detik

function showDownloadForm(nim, sertifikat, nama, jenisPrestasi) {
    // Logika untuk menampilkan modal
    const downloadForm = document.getElementById("downloadForm");
    downloadForm.style.display = "block";
    resetTimer(); // Reset timer saat modal dibuka

    // Simpan sertifikat dan nama untuk digunakan di validasi
    document.getElementById("tokenForm").onsubmit = function (event) {
        return validateToken(event, nim, sertifikat, nama, jenisPrestasi);
    };
}

// Fungsi untuk validasi token
function validateToken(event, nim, sertifikat, nama, jenisPrestasi) {
    event.preventDefault();
    const tokenInput = document.getElementById('token').value;

    if (tokenInput === nim) {
        document.getElementById('message').textContent = `Mencari ${nama}...`; // Perbaiki di sini
        setTimeout(() => {
            document.getElementById('message').textContent = '';
            downloadSertifikat(sertifikat, nama, jenisPrestasi);
            closeDownloadForm();
        }, 3000);
    } else {
        document.getElementById('message').textContent = 'NIM tidak valid!';
    }
    return false;
}

// Fungsi untuk mengunduh sertifikat
function downloadSertifikat(sertifikat, nama, jenisPrestasi) {
    fetch(sertifikat)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.blob(); // Mengubah response ke Blob
        })
        .then(blob => {
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob); // Membuat URL dari Blob
            link.href = url;
            link.download = `Sertifikat_${jenisPrestasi.replace(/\s+/g, "_")}_${nama.replace(/\s+/g, "_")}.jpg`; // Perbaiki di sini
            document.body.appendChild(link);
            link.click(); // Menjalankan klik untuk mengunduh
            document.body.removeChild(link);
            URL.revokeObjectURL(url); // Menghapus URL setelah diunduh
        })
        .catch(error => {
            console.error('Terjadi kesalahan:', error);
            document.getElementById('message').textContent = 'Gagal mengunduh sertifikat!';
        });
}

// Fungsi untuk menutup form download
function closeDownloadForm() {
    const downloadForm = document.getElementById("downloadForm");
    downloadForm.style.display = "none"; // Menyembunyikan modal
    clearInterval(timerInterval); // Hentikan timer
    resetTimerDisplay(); // Reset tampilan timer
    document.getElementById("message").textContent = ""; // Menghapus pesan
    document.getElementById("token").value = ""; // Mengosongkan input token
}

// Fungsi untuk reset timer
function resetTimer() {
    clearInterval(timerInterval); // Hentikan timer jika sedang berjalan
    timeLeft = 60; // Reset waktu
    document.getElementById("timeLeft").textContent = timeLeft; // Update tampilan

    timerInterval = setInterval(() => {
        timeLeft--;
        document.getElementById("timeLeft").textContent = timeLeft; // Update tampilan
        if (timeLeft <= 0) {
            clearInterval(timerInterval); // Hentikan timer
            closeDownloadForm(); // Tutup modal ketika waktu habis
        }
    }, 1000);
}

// Fungsi untuk reset tampilan timer
function resetTimerDisplay() {
    document.getElementById("timeLeft").textContent = "60"; // Set kembali tampilan ke 60 detik
}
